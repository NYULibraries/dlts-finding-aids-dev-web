{"version":3,"sources":["webpack:///src/src/App.vue","webpack:///src/components/src/components/Navbar.vue","webpack:///src/components/src/components/Home.vue","webpack:///src/components/src/components/CreateNewFindingAid.vue","webpack:///src/components/src/components/Login.vue","webpack:///src/components/src/components/Preview.vue","webpack:///src/components/src/components/ManageInProcessFindingAids.vue","webpack:///src/components/src/components/ManagePublishedFindingAids.vue"],"names":[],"mappings":"AA+DA,KACA,6CAAA,CACA,kCAAA,CACA,iCAAA,CACA,YAAA,CACA,iBAAA,CACA,aACA,CAEA,KACA,YACA,CAEA,OACA,eAAA,CACA,aACA,CAEA,gCACA,aACA,CAEA,aACA,WAAA,CACA,UACA,CCLA,2BACA,UACA,CAEA,qCACA,wBACA,CCeA,gCAEA,iBACA,CAEA,8BACA,cACA,CAQA,oEALA,4BAAA,CACA,0BAAA,CACA,yBAQA,CALA,oCAGA,2BAEA,CAEA,mCACA,4BAAA,CACA,2BAAA,CACA,yBACA,CAEA,8BACA,UACA,CAEA,8BACA,0BAAA,CACA,2BAAA,CACA,yBAAA,CACA,UAAA,CACA,cACA,CCm2BA,yBACA,aACA,CAEA,8BACA,YACA,CAEA,mCACA,qBAAA,CACA,mBAAA,CACA,UACA,CAEA,6BACA,UACA,CAEA,yBACA,SACA,CAEA,sBACA,UACA,CC51BA,+BACA,aACA,CAEA,2BACA,SACA,CAUA,+FACA,cACA,CAEA,iCACA,aACA,CClIA,oBACA,cACA,CCgtBA,gCACA,gBAAA,CACA,cAAA,CACA,eAAA,CACA,aACA,CAEA,+BACA,gBACA,CAEA,yBACA,gBAAA,CACA,aACA,CC1OA,gCACA,gBAAA,CACA,cAAA,CACA,eAAA,CACA,aACA,CAEA,+BACA,gBACA,CAEA,yBACA,gBAAA,CACA,aACA","file":"app.d5e69185.css","sourcesContent":["<template>\n    <div id=\"app\">\n        <router-view id=\"router-view\" />\n\n        <b-modal\n            id=\"help-modal\"\n            size=\"lg\"\n            centered\n            ok-only\n            scrollable\n            :title=\"helpModal.title\"\n        >\n            <span v-html=\"helpModal.content\"></span>\n        </b-modal>\n    </div>\n</template>\n\n<script>\n\nimport { mapGetters, mapActions } from 'vuex';\n\nexport default {\n    name       : 'App',\n    components : {\n    },\n    data() {\n        return {\n            route : this.$route,\n        };\n    },\n    computed : {\n        ...mapGetters(\n            [\n                'helpModal',\n            ],\n        ),\n    },\n    watch : {\n    },\n    mounted() {\n        this._keyListener = function ( e ) {\n            if ( e.key === 'h' && ( e.ctrlKey ) ) {\n                e.preventDefault(); // present \"Save Page\" from getting triggered.\n\n                this.$bvModal.show( 'help-modal' );\n            }\n        };\n\n        document.addEventListener( 'keydown', this._keyListener.bind( this ) );\n    },\n    beforeDestroy() {\n        document.removeEventListener( 'keydown', this._keyListener );\n    },\n    methods : {\n        ...mapActions(\n            [\n            ],\n        ),\n    },\n};\n</script>\n\n<style>\n#app {\n  font-family: Avenir, Helvetica, Arial, sans-serif;\n  -webkit-font-smoothing: antialiased;\n  -moz-osx-font-smoothing: grayscale;\n  height : 900px;\n  text-align: center;\n  color: #2c3e50;\n}\n\n#nav {\n  padding: 30px;\n}\n\n#nav a {\n  font-weight: bold;\n  color: #2c3e50;\n}\n\n#nav a.router-link-exact-active {\n  color: #42b983;\n}\n\n#router-view {\n    height : 100%;\n    width  : 100%;\n}\n</style>\n","<template>\n    <div>\n        <b-navbar\n            sticky\n            type=\"light\"\n            variant=\"light\"\n        >\n            <b-navbar-brand href=\"#/\">\n                FAM\n            </b-navbar-brand>\n\n            <b-collapse\n                id=\"nav-collapse\"\n                is-nav\n            >\n                <b-navbar-nav>\n                    <b-nav-item\n                        :to=\"{ name: 'home' }\"\n                        exact\n                    >\n                        Home\n                    </b-nav-item>\n                    <b-nav-item :to=\"{ name: 'create' }\">\n                        Create FA\n                    </b-nav-item>\n                    <b-nav-item :to=\"{ name: 'in-process' }\">\n                        In-process FAs\n                    </b-nav-item>\n                    <b-nav-item :to=\"{ name: 'published' }\">\n                        Published FAs\n                    </b-nav-item>\n                </b-navbar-nav>\n\n                <!-- Right aligned nav items -->\n                <b-navbar-nav class=\"ml-auto\">\n                    <b-nav-text right>\n                        {{ currentUser }}\n                    </b-nav-text>\n\n                    <b-nav-item\n                        right\n                        @click=\"logout\"\n                    >\n                        Logout\n                    </b-nav-item>\n                </b-navbar-nav>\n            </b-collapse>\n        </b-navbar>\n    </div>\n</template>\n\n<script>\nimport { mapActions, mapGetters } from 'vuex';\n\nexport default {\n    computed : {\n        ...mapGetters(\n            [\n                'currentUser',\n            ],\n        ),\n    },\n    methods : {\n        async logout() {\n            if ( this.currentUser ) {\n                await this.$sleep( 500 );\n\n                this.setCurrentUser( '' );\n                this.setFetchInitialPublishedFindingAidsMetadata( true );\n                this.$router.push( 'login' );\n            }\n        },\n        ...mapActions(\n            [\n                'setCurrentUser',\n                'setFetchInitialPublishedFindingAidsMetadata',\n            ],\n        ),\n    },\n};\n</script>\n\n<style scoped>\n.nav-link {\n    color : black;\n}\n\n.router-link-active {\n    background-color : lightgrey;\n}\n</style>\n","<template>\n    <b-container\n        id=\"main-container\"\n        class=\"main-container h-100\"\n    >\n        <navbar />\n        <b-row\n            id=\"welcome-row\"\n            align-v=\"center\"\n        >\n            <b-col>\n                <h1>\n                    Welcome to the FAM\n                </h1>\n            </b-col>\n        </b-row>\n        <b-row\n            id=\"options-row\"\n        >\n            <b-col\n                id=\"create-option\"\n                class=\"option-column\"\n                cols=\"4\"\n            >\n                <router-link\n                    class=\"option-link\"\n                    :to=\"{ name : 'create' }\"\n                >\n                    Create a finding aid\n                </router-link>\n            </b-col>\n            <b-col\n                id=\"in-process-option\"\n                class=\"option-column\"\n                cols=\"4\"\n            >\n                <router-link\n                    class=\"option-link\"\n                    :to=\"{ name : 'in-process' }\"\n                >\n                    Manage in-process finding aids\n                </router-link>\n            </b-col>\n            <b-col\n                id=\"published-option\"\n                class=\"option-column\"\n                cols=\"4\"\n            >\n                <router-link\n                    class=\"option-link\"\n                    :to=\"{ name : 'published' }\"\n                >\n                    Manage published finding aids\n                </router-link>\n            </b-col>\n        </b-row>\n    </b-container>\n</template>\n\n<script>\nimport { mapActions, mapGetters } from 'vuex';\n\nimport Navbar from './Navbar';\n\nexport default {\n    name       : 'Home',\n    components : {\n        Navbar,\n    },\n    props    : {},\n    computed : {\n        ...mapGetters(\n            [\n                'currentUser',\n            ],\n        ),\n    },\n    mounted() {\n        if ( ! this.currentUser ) {\n            this.$router.push( { name : 'login' } );\n\n            return;\n        }\n\n        this.setHelpModal(\n            {\n                content : '<p>Try navigating using the navbar and the links on the page.</p>' +\n                    '<p>Try logging out and navigating back to this home page without first logging back in.</p>',\n                title   : 'Home screen',\n            },\n        );\n    },\n    methods : {\n        ...mapActions(\n            [\n                'setHelpModal',\n            ],\n        ),\n    },\n};\n</script>\n\n<!-- Add \"scoped\" attribute to limit CSS to this component only -->\n<style scoped>\n.option-column {\n    /* Height of row = 900px * 18% */\n    line-height : 162px;\n}\n\n.option-link {\n    font-size : 24px;\n}\n\n#create-option {\n    border-bottom : solid black 1px;\n    border-left : solid black 1px;\n    border-top : solid black 1px;\n}\n\n#in-process-option {\n    border-bottom : solid black 1px;\n    border-left : solid black 1px;\n    border-right : solid black 1px;\n    border-top : solid black 1px;\n}\n\n#published-option {\n    border-bottom : solid black 1px;\n    border-right : solid black 1px;\n    border-top : solid black 1px;\n}\n\n#options-row {\n    height : 18%;\n}\n\n#welcome-row {\n    border-left : solid black 1px;\n    border-right : solid black 1px;\n    border-top : solid black 1px;\n    height     : 18%;\n    margin-top : 20%;\n}\n</style>\n","<template>\n    <div>\n        <b-container\n            id=\"main-container\"\n            class=\"main-container h-100\"\n        >\n            <navbar />\n\n            <h1 id=\"header\">\n                Upload EAD XML file\n            </h1>\n\n            <b-row\n                id=\"upload-row\"\n                class=\"row\"\n                align-h=\"center\"\n            >\n                <b-col\n                    id=\"upload-col\"\n                    cols=\"6\"\n                >\n                    <!-- Styled -->\n                    <b-form-file\n                        ref=\"upload-file-input\"\n                        v-model=\"file\"\n                        :state=\"formFileState\"\n                        accept=\".xml\"\n                        placeholder=\"Choose an EAD file or drop it here...\"\n                        drop-placeholder=\"Drop file here...\"\n                    />\n                </b-col>\n            </b-row>\n\n            <b-row\n                id=\"results-row\"\n                class=\"row\"\n                align-h=\"center\"\n            >\n                <b-col\n                    id=\"results-col\"\n                >\n                    <b-form-textarea\n                        id=\"results-textarea\"\n                        v-model=\"results\"\n                        placeholder=\"Waiting for upload of EAD file...\"\n                        rows=\"15\"\n                        readonly\n                        plaintext\n                    />\n                </b-col>\n            </b-row>\n\n            <b-row\n                id=\"buttons-row\"\n                class=\"row\"\n                align-h=\"center\"\n            >\n                <b-col\n                    id=\"buttons-col\"\n                    cols=\"10\"\n                >\n                    <b-button\n                        id=\"cancel-button\"\n                        class=\"button\"\n                        variant=\"dark\"\n                        :disabled=\"cancelDisabled\"\n                        @click=\"cancel\"\n                    >\n                        Cancel\n                    </b-button>\n                    <b-button\n                        id=\"submit-button\"\n                        class=\"button\"\n                        variant=\"success\"\n                        :disabled=\"submitDisabled\"\n                        @click=\"submit\"\n                    >\n                        Submit\n                    </b-button>\n                </b-col>\n            </b-row>\n        </b-container>\n    </div>\n</template>\n\n<script>\nimport moment from 'moment';\nimport { mapActions, mapGetters } from 'vuex';\n\nimport Navbar from './Navbar';\n\nconst validRelatorCodes = [\n    'abr',\n    'acp',\n    'act',\n    'adi',\n    'adp',\n    'aft',\n    'anl',\n    'anm',\n    'ann',\n    'ant',\n    'ape',\n    'apl',\n    'app',\n    'aqt',\n    'arc',\n    'ard',\n    'arr',\n    'art',\n    'asg',\n    'asn',\n    'ato',\n    'att',\n    'auc',\n    'aud',\n    'aui',\n    'aus',\n    'aut',\n    'bdd',\n    'bjd',\n    'bkd',\n    'bkp',\n    'blw',\n    'bnd',\n    'bpd',\n    'brd',\n    'brl',\n    'bsl',\n    'cas',\n    'ccp',\n    'chr',\n    'cli',\n    'cll',\n    'clr',\n    'clt',\n    'cmm',\n    'cmp',\n    'cmt',\n    'cnd',\n    'cng',\n    'cns',\n    'coe',\n    'col',\n    'com',\n    'con',\n    'cor',\n    'cos',\n    'cot',\n    'cou',\n    'cov',\n    'cpc',\n    'cpe',\n    'cph',\n    'cpl',\n    'cpt',\n    'cre',\n    'crp',\n    'crr',\n    'crt',\n    'csl',\n    'csp',\n    'cst',\n    'ctb',\n    'cte',\n    'ctg',\n    'ctr',\n    'cts',\n    'ctt',\n    'cur',\n    'cwt',\n    'dbp',\n    'dfd',\n    'dfe',\n    'dft',\n    'dgg',\n    'dgs',\n    'dis',\n    'dln',\n    'dnc',\n    'dnr',\n    'dpc',\n    'dpt',\n    'drm',\n    'drt',\n    'dsr',\n    'dst',\n    'dtc',\n    'dte',\n    'dtm',\n    'dto',\n    'dub',\n    'edc',\n    'edm',\n    'edt',\n    'egr',\n    'elg',\n    'elt',\n    'eng',\n    'enj',\n    'etr',\n    'evp',\n    'exp',\n    'fac',\n    'fds',\n    'fld',\n    'flm',\n    'fmd',\n    'fmk',\n    'fmo',\n    'fmp',\n    'fnd',\n    'fpy',\n    'frg',\n    'gis',\n    'his',\n    'hnr',\n    'hst',\n    'ill',\n    'ilu',\n    'ins',\n    'inv',\n    'isb',\n    'itr',\n    'ive',\n    'ivr',\n    'jud',\n    'jug',\n    'lbr',\n    'lbt',\n    'ldr',\n    'led',\n    'lee',\n    'lel',\n    'len',\n    'let',\n    'lgd',\n    'lie',\n    'lil',\n    'lit',\n    'lsa',\n    'lse',\n    'lso',\n    'ltg',\n    'lyr',\n    'mcp',\n    'mdc',\n    'med',\n    'mfp',\n    'mfr',\n    'mod',\n    'mon',\n    'mrb',\n    'mrk',\n    'msd',\n    'mte',\n    'mtk',\n    'mus',\n    'nrt',\n    'opn',\n    'org',\n    'orm',\n    'osp',\n    'oth',\n    'own',\n    'pan',\n    'pat',\n    'pbd',\n    'pbl',\n    'pdr',\n    'pfr',\n    'pht',\n    'plt',\n    'pma',\n    'pmn',\n    'pop',\n    'ppm',\n    'ppt',\n    'pra',\n    'prc',\n    'prd',\n    'pre',\n    'prf',\n    'prg',\n    'prm',\n    'prn',\n    'pro',\n    'prp',\n    'prs',\n    'prt',\n    'prv',\n    'pta',\n    'pte',\n    'ptf',\n    'pth',\n    'ptt',\n    'pup',\n    'rbr',\n    'rcd',\n    'rce',\n    'rcp',\n    'rdd',\n    'red',\n    'ren',\n    'res',\n    'rev',\n    'rpc',\n    'rps',\n    'rpt',\n    'rpy',\n    'rse',\n    'rsg',\n    'rsp',\n    'rsr',\n    'rst',\n    'rth',\n    'rtm',\n    'sad',\n    'sce',\n    'scl',\n    'scr',\n    'sds',\n    'sec',\n    'sgd',\n    'sgn',\n    'sht',\n    'sll',\n    'sng',\n    'spk',\n    'spn',\n    'spy',\n    'srv',\n    'std',\n    'stg',\n    'stl',\n    'stm',\n    'stn',\n    'str',\n    'tcd',\n    'tch',\n    'ths',\n    'tld',\n    'tlp',\n    'trc',\n    'trl',\n    'tyd',\n    'tyg',\n    'uvp',\n    'vac',\n    'vdg',\n    'wac',\n    'wal',\n    'wam',\n    'wat',\n    'wdc',\n    'wde',\n    'win',\n    'wit',\n    'wpr',\n    'wst',\n];\n\n// This will fill this.uploadedFindingAid\nconst requiredEADElementsGetters = {\n    eadid : function ( eadDoc ) {\n        const elementName = '<eadid>';\n        const element = eadDoc.getElementsByTagName( 'eadid' )[ 0 ];\n\n        let elementValue;\n        if ( element ) {\n            elementValue = element.textContent.trim();\n\n            if ( ! elementValue ) {\n                throw new Error( `ERROR: Required element ${ elementName } is empty.` );\n            }\n\n            return elementValue;\n        } else {\n            throw new Error( `ERROR: Required element ${ elementName } not found.` );\n        }\n    },\n    repository : function ( eadDoc ) {\n        const elementName = '<repository>/<corpname>';\n        let element;\n        let elementValue;\n        try {\n            element = eadDoc.getElementsByTagName( 'repository' )[ 0 ]\n                .getElementsByTagName( 'corpname' )[ 0 ];\n\n            elementValue = element.textContent.trim();\n        } catch( e ) {\n            throw new Error( `ERROR: Required element ${ elementName } not found.` );\n        }\n\n        if ( ! elementValue ) {\n            throw new Error( `ERROR: Required element ${ elementName } is empty.` );\n        }\n\n        return elementValue;\n    },\n};\n\nlet parser;\n\nexport default {\n    name       : 'CreateNewFindingAid',\n    components : {\n        Navbar,\n    },\n    data() {\n        return {\n            file                : null,\n            cancelDisabled      : null,\n            inProcessFindingAid : null,\n            results             : null,\n            formFileState       : null,\n            submitDisabled      : true,\n            uploadedFindingAid  : {},\n        };\n    },\n    computed : {\n        recognizedRepositoryNames() {\n            return Object.keys( this.repositories ).map( repositoryCode => {\n                return this.repositories[ repositoryCode ].name;\n            } );\n        },\n        recognizedRepositoryNamesListHTML() {\n            return this.recognizedRepositoryNames.map( repositoryName => {\n                return `<li>${ repositoryName.replace( '&', '&amp;amp;' ) }</li>\\n`;\n            } ).join( '' );\n        },\n        ...mapGetters(\n            [\n                'currentUser',\n                'currentRepositoryNames',\n                'inProcessFindingAids',\n                'publishedFindingAids',\n                'repositories',\n            ],\n        ),\n    },\n    watch : {\n        async file() {\n            if ( this.file ) {\n                this.cancelDisabled = true;\n\n                if ( ! this.file.name.endsWith( '.xml' ) ) {\n                    this.results = 'The uploaded EAD file must have a .xml extension.';\n                    this.formFileState = false;\n                    return;\n                }\n\n                this.formFileState = true;\n                this.results = `Uploading EAD file ${ this.file.name }...\\n`;\n                await this.$sleep( 5000 );\n                this.results += 'Upload complete.\\n';\n\n                const ead = await this.$readFileAsTextSync( this.file );\n\n                this.processEAD( ead );\n\n                // Need to do this so that users can re-upload same file in Chrome\n                this.$refs[ 'upload-file-input' ].reset();\n\n                this.cancelDisabled = false;\n            }\n        },\n    },\n    mounted() {\n        if ( ! this.currentUser ) {\n            this.$router.push( { name : 'login' } );\n\n            return;\n        }\n\n        parser = new DOMParser();\n\n        this.setHelpModal(\n            {\n                content : `\nThis interactive mockup does basic validation of the EAD file.\nIf any of the elements listed below are missing, or are present but empty,\nthe EAD file will not be accepted.\n\n<br>\n<br>\n\n<ul>\n    <li>eadid:<br />\n        <code>\n            &lt;ead&gt;[EADID]&lt;/eadid&gt;\n        </code>\n    </li>\n    <li>repository:<br />\n        <code>\n            &lt;repository&gt;<br />\n            &nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&lt;corpname&gt;[REPOSITORY LONG NAME]&lt;/corpname&gt;<br />\n            &lt;/repository&gt;\n        </code>\n    </li>\n</ul>\n\n<br>\n<br>\n\nSome things to try:\n\n<br>\n<br>\n\n<ul>\n    <li>Upload a file with valid content using a filename ending in .xml</li>\n    <li>Upload a file with valid content using a filename that does not end in .xml</li>\n    <li>Upload a file with that is missing one or more of the required elements listed above\n    </li>\n    <li>Upload a file with one or more elements with empty values in one or more of the required elements listed above</li>\n    <li>\n\n        Upload a file with an &lt;eadid&gt; that does not conform to the\n        <a\n            href=\"https://jira.nyu.edu/jira/browse/FADESIGN-20?focusedCommentId=426301&page=com.atlassian.jira.plugin.system.issuetabpanels:comment-tabpanel#comment-426301\"\n            target=\"_blank\">\n            rules\n        </a>\n    </li>\n    <li>\n        Upload a file with a &lt;repository&gt/&lt;corpname&gt; value that is not a recognized.\n        These are the currently recognized repository long names:\n        <ul>\n            ${ this.recognizedRepositoryNamesListHTML }\n        </ul>\n    </li>\n    <li>\n        Upload a file with multiple elements that have <code>role</code> attributes\n        containing unrecognized relator codes - i.e. codes not in the\n        <a href=\"https://jira.nyu.edu/jira/secure/attachment/41923/relator-authoritative-labels-2021-01-05.csv\">\n            official Finding Aids relator codes list\n        </a> [TODO: CHANGE TO PUBLIC GITHUB URL ONCE IT EXISTS].\n        Elements whose <code>role</code> attributes are checked for valid relator codes:\n        <ul>\n            <li><code>&lt;controlaccess&gt;&lt;corpname role=\"[RELATOR CODE]\"&gt;...&lt;/corpname&gt;&lt;/controlaccess&gt;</li></code>\n            <li><code>&lt;controlaccess&gt;&lt;famname role=\"[RELATOR CODE]\"&gt;...&lt;/famname&gt;&lt;/controlaccess&gt;</li></code>\n            <li><code>&lt;controlaccess&gt;&lt;persname role=\"[RELATOR CODE]\"&gt;...&lt;/persname&gt;&lt;/controlaccess&gt;</li></code>\n            <li><code>&lt;origination&gt;&lt;corpname role=\"[RELATOR CODE]\"&gt;...&lt;/corpname&gt;&lt;/origination&gt;</li></code>\n            <li><code>&lt;origination&gt;&lt;famname role=\"[RELATOR CODE]\"&gt;...&lt;/famname&gt;&lt;/origination&gt;</li></code>\n            <li><code>&lt;origination&gt;&lt;persname role=\"[RELATOR CODE]\"&gt;...&lt;/persname&gt;&lt;/origination&gt;</li></code>\n            <li><code>&lt;repository&gt;&lt;corpname role=\"[RELATOR CODE]\"&gt;...&lt;/corpname&gt;&lt;/repository&gt;</li></code>\n        </ul>\n    </li>\n    <li>Click the Cancel button after an upload has completed, but before submitting using the Submit button</li>\n    <li>\n        Upload a valid EAD file containing one or more elements with attribute <code>audience=\"internal\"</code>.\n        <br />\n        Example:\n        <br />\n        <code>\n&lt;ead...&gt;<br/ >\n<br/ >\n...<br />\n<br/ >\n&nbsp;&nbsp;&lt;did&gt;<br/ >\n&nbsp;&nbsp;&nbsp;&nbsp;&lt;repository&gt;<br/ >\n&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&lt;corpname&gt;New York University Archives&lt;/corpname&gt;<br/ >\n&nbsp;&nbsp;&nbsp;&nbsp;&lt;/repository&gt;<br/ >\n&nbsp;&nbsp;&nbsp;&nbsp;&lt;unittitle&gt;John \"The Cop\" Quigley Collection&lt;/unittitle&gt;<br/ >\n&nbsp;&nbsp;&nbsp;&nbsp;&lt;origination <strong>audience=\"internal\"</strong> label=\"Creator\"&gt;<br/ >\n&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&lt;persname source=\"local\"&gt;Oscar Rose, Secretary of the Committee on Publication; member of the NYU Arts and Engineering Alumni Association&lt;/persname&gt;<br/ >\n&nbsp;&nbsp;&nbsp;&nbsp;&lt;/origination&gt;<br/ >\n&nbsp;&nbsp;&nbsp;&nbsp;&lt;unitid&gt;MC.100&lt;/unitid&gt;<br/ >\n&nbsp;&nbsp;&nbsp;&nbsp;&lt;unitid <strong>audience=\"internal\"</strong> identifier=\"248\" type=\"Archivists Toolkit Database::RESOURCE\"&gt;248&lt;/unitid&gt;<br/ >\n<br/ >\n...<br/ >\n<br/ >\n&lt;ead&gt;<br />\n        </code>\n\n    </li>\n    <li>Upload an EAD file with the same &lt;eadid&gt; value as:\n        <ul>\n            <li>an existing <strong>in-process</strong> finding aid which belongs to the <strong>same repository</strong></li>\n            <li>an existing <strong>in-process</strong> finding aid which belongs to a <strong>different repository</strong></li>\n            <li>an existing <strong>published</strong> finding aid which belongs to a <strong>different repository</strong></li>\n        </ul>\n    </li>\n    <li>Upload a valid EAD file and submit it using the Submit button</li>\n</ul>\n`,\n                title   : 'Create New Finding Aid screen',\n            },\n        );\n    },\n    methods : {\n        cancel() {\n            this.file = null;\n            this.results = null;\n            this.formFileState = true;\n            this.submitDisabled = true;\n        },\n        getErrorHeader( headerText ) {\n            const label = 'Error: ';\n            const dashes = '-'.repeat( headerText.length + label.length );\n\n            return `${ dashes }\\n${ label }${ headerText }\\n\\n`;\n        },\n        getFindingAidDescription( findingAid ) {\n            let description =\n                `EAD ID: ${ findingAid.eadid }\\n` +\n                `REPOSITORY: ${ findingAid.repository }\\n`;\n\n            if ( findingAid.timestamp ) {\n                description += `TIMESTAMP: ${ findingAid.timestamp }\\n`;\n            }\n\n            return description;\n        },\n        getRepositoryCodeForRepository( repositoryName ) {\n            var that = this,\n                repositoryCode;\n\n            Object.keys( this.repositories ).forEach( code => {\n                if ( that.repositories[ code ].name === repositoryName ) {\n                    repositoryCode = code;\n                }\n            } );\n\n            return repositoryCode;\n        },\n        getRequiredEADElements( eadDoc, requiredEADElements ) {\n            let result = true;\n\n            for ( const [ elementName, getter ] of Object.entries( requiredEADElements ) ) {\n                try {\n                    this.uploadedFindingAid[ elementName ] = getter( eadDoc );\n                } catch( e ) {\n                    result = false;\n\n                    this.results += `\\n${ e.message }\\n`;\n                }\n            }\n\n            return result;\n        },\n        async processEAD( ead ) {\n            this.results += 'Validating EAD file...\\n';\n\n            await this.$sleep( 2000 );\n\n            let abort = false;\n            this.uploadedFindingAid = {};\n\n            const eadDoc = parser.parseFromString( ead, 'application/xml' );\n\n            // These validate methods will update this.results accordingly.\n            if ( ! this.validateXML( eadDoc ) ) {\n                return;\n            }\n\n            if ( ! this.getRequiredEADElements( eadDoc, requiredEADElementsGetters ) ) {\n                abort = true;\n            }\n\n            if ( ! this.validateRepository() ) {\n                abort = true;\n            }\n            this.uploadedFindingAid.repositoryCode =\n                this.getRepositoryCodeForRepository( this.uploadedFindingAid.repository );\n\n            if ( ! this.validateEADID( this.uploadedFindingAid.eadid ) ) {\n                abort = true;\n            }\n\n            if ( ! this.validateEADIDNoConflicts() ) {\n                abort = true;\n            }\n\n            if ( ! this.validateNoUnpublishedMaterial( eadDoc ) ) {\n                abort = true;\n            }\n\n            if ( ! this.validateRoleAttributes( eadDoc ) ) {\n                abort = true;\n            }\n\n            if ( abort ) {\n                const instruction = 'Please make the necessary corrections and re-upload the EAD file.';\n                this.results += '-'.repeat( instruction.length ) + '\\n\\n' + instruction;\n\n                this.formFileState = false;\n                this.submitDisabled = true;\n\n                return;\n            }\n\n            this.newInProcessFindingAid = {\n                timestamp   : Math.round( ( new Date() ).getTime() / 1000 ),\n                id         : this.uploadedFindingAid.eadid,\n                repository : this.uploadedFindingAid.repositoryCode,\n                title      : this.uploadedFindingAid.title,\n            };\n\n            this.results += `File validation is complete.\n\nClick Submit to move this file to In-Process FAs and to create a preview finding aid for:\n\n`;\n\n            this.results += this.getFindingAidDescription( this.uploadedFindingAid ) + '\\n';\n\n            this.submitDisabled = false;\n        },\n        async submit() {\n            this.results += 'Creating in-process finding aid...\\n';\n\n            await this.$sleep( 5000 );\n\n            this.addInProcessFindingAid( this.newInProcessFindingAid );\n\n            const formattedTimestamp =\n                moment( this.newInProcessFindingAid.timestamp * 1000 ).format( 'M/D/YYYY h:mm a' );\n\n            this.results += `New in-process finding aid created with timestamp ${  formattedTimestamp }.\n\nProceed to In-process FAs to preview the new EAD file and finding aid.\n\n`;\n\n            this.submitDisabled = true;\n        },\n        validateEADID( eadid ) {\n            const errors = [];\n\n            const tokens = eadid.split( '_' );\n            if ( tokens.length < 2 || tokens.length > 8 ) {\n                errors.push( 'There must be between 2 to 8 character groups joined by underscores.' );\n            }\n\n            const allowedCharactersRegex = /[^a-z0-9]/g;\n            const disallowedCharactersFoundObject = {};\n            tokens.forEach( token => {\n                const matches = [ ...token.matchAll( allowedCharactersRegex ) ];\n\n                if ( matches.length > 0 ) {\n                    matches.forEach( match => {\n                        disallowedCharactersFoundObject[ match ] = true;\n                    } );\n                }\n            } );\n\n            const disallowedCharactersFound = Object.keys( disallowedCharactersFoundObject );\n            if ( disallowedCharactersFound.length > 0 ) {\n                errors.push( 'The following characters are not allowed in character groups: ' +\n                             disallowedCharactersFound.sort().join( ', ' ) );\n            }\n\n            if ( errors.length > 0 ) {\n                this.results += this.getErrorHeader( 'Invalid <eadid>' ) +\n                                `<eadid> value \"${ eadid }\" does ` +\n                                'not conform to the Finding Aids specification.\\n';\n\n                this.results += errors.join( '\\n' ) + '\\n\\n';\n\n                return false;\n            }\n\n            return true;\n        },\n        validateEADIDNoConflicts() {\n            const noConflictsInInProcess =\n                this.validateEADIDNoConflictsInInProcess();\n\n            const noConflictsInInProcessPublished =\n                this.validateEADIDNoConflictsInPublished();\n\n            // We can't return\n            //    this.validateEADIDNoConflictsInInProcess() &&\n            //    this.validateEADIDNoConflictsInInProcess()\n            // ...because both methods must run for side effects, and && will\n            // short-circuit the latter method call if the first returns false.\n            return noConflictsInInProcess && noConflictsInInProcessPublished;\n        },\n        validateEADIDNoConflictsInInProcess() {\n            const eadid = this.uploadedFindingAid.eadid;\n            const repository = this.uploadedFindingAid.repository;\n\n            let existingInProcessFindingAidWithSameEADID;\n            Object.keys( this.inProcessFindingAids ).forEach( repositoryCode => {\n                if ( this.inProcessFindingAids[ repositoryCode ][ eadid ] ) {\n                    existingInProcessFindingAidWithSameEADID =\n                        this.inProcessFindingAids[ repositoryCode ][ eadid ];\n                    existingInProcessFindingAidWithSameEADID.eadid = eadid;\n                    existingInProcessFindingAidWithSameEADID.repository = this.repositories[ repositoryCode ].name;\n                    existingInProcessFindingAidWithSameEADID.repositoryCode = repositoryCode;\n                }\n            } );\n\n            if ( existingInProcessFindingAidWithSameEADID ) {\n                if ( existingInProcessFindingAidWithSameEADID.repository === repository ) {\n                    this.results += this.getErrorHeader( 'Finding aid already in-process' ) +\n`An in-process finding aid with <eadid> \"${ eadid }\" already exists:\n\n${ this.getFindingAidDescription( existingInProcessFindingAidWithSameEADID ) }\nYou must delete or publish this in-process finding aid before uploading this EAD file.\n\n`;\n                } else {\n                    this.results += this.getErrorHeader( '<eadid> conflict with an in-process finding aid in a different repository' ) +\n`An in-process finding aid with <eadid> \"${ eadid }\" already exists in repository \"${ existingInProcessFindingAidWithSameEADID.repository }\":\n\n${ this.getFindingAidDescription( existingInProcessFindingAidWithSameEADID ) }\n\nThe uploaded EAD file belongs to repository \"${ repository }\".  <eadid> values must be unique across all repositories.\nIn order to create an in-process finding aid from this EAD file, `;\n\n                    let fixMethod = 'delete/publish';\n                    if ( ! this.currentRepositoryNames.includes( existingInProcessFindingAidWithSameEADID.repository ) ) {\n                        fixMethod = 'request the deletion/publication of';\n                    }\n\n                    this.results +=\n`you must either ${ fixMethod } the existing in-process finding aid in repository \"${ existingInProcessFindingAidWithSameEADID.repository }\" ` +\n`or change the <eadid> value in this EAD file.\n\n`;\n                }\n\n                return false;\n            }\n\n            return true;\n        },\n        validateEADIDNoConflictsInPublished() {\n            const eadid = this.uploadedFindingAid.eadid;\n            const repository = this.uploadedFindingAid.repository;\n\n            let existingPublishedFindingAidWithSameEADIDInDifferentRepository;\n            Object.keys( this.publishedFindingAids ).forEach( repositoryCode => {\n                if ( this.publishedFindingAids[ repositoryCode ][ eadid ] &&\n                     repositoryCode !== this.uploadedFindingAid.repositoryCode ) {\n                    existingPublishedFindingAidWithSameEADIDInDifferentRepository =\n                        this.publishedFindingAids[ repositoryCode ][ eadid ];\n                    existingPublishedFindingAidWithSameEADIDInDifferentRepository.eadid = eadid;\n                    existingPublishedFindingAidWithSameEADIDInDifferentRepository.repository = this.repositories[ repositoryCode ].name;\n                    existingPublishedFindingAidWithSameEADIDInDifferentRepository.repositoryCode = repositoryCode;\n                }\n            } );\n\n            if ( existingPublishedFindingAidWithSameEADIDInDifferentRepository ) {\n                this.results += this.getErrorHeader( '<eadid> conflict with a published finding aid in a different repository' ) +\n`A published finding aid with <eadid> \"${ eadid }\" already exists in repository \"${ existingPublishedFindingAidWithSameEADIDInDifferentRepository.repository }\":\n\n${ this.getFindingAidDescription( existingPublishedFindingAidWithSameEADIDInDifferentRepository ) }\nThe uploaded EAD file belongs to repository \"${ repository }\".  <eadid> values must be unique across all repositories.\nIn order to create an in-process finding aid from this EAD file, `;\n\n                let deletionMethod = 'delete';\n                if ( ! this.currentRepositoryNames.includes( existingPublishedFindingAidWithSameEADIDInDifferentRepository.repository ) ) {\n                    deletionMethod = 'request the deletion of';\n                }\n\n                this.results +=\n`you must either ${ deletionMethod } the existing published finding aid in repository \"${ existingPublishedFindingAidWithSameEADIDInDifferentRepository.repository }\", ` +\n`or change the <eadid> value in this EAD file.\n\n`;\n\n                return false;\n            }\n\n            return true;\n        },\n        validateNoUnpublishedMaterial( eadDoc ) {\n            const allElements = eadDoc.getElementsByTagName( '*' );\n            const elementsWithAudienceInternal = [];\n\n            allElements.forEach( element => {\n                if ( element.getAttribute( 'audience' ) === 'internal' ) {\n                    elementsWithAudienceInternal.push( element );\n                }\n            } );\n\n            if ( elementsWithAudienceInternal.length > 0 ) {\n                this.results += this.getErrorHeader( 'Private data detected' ) +\n                                'The EAD file contains unpublished material.  ' +\n                                'The following EAD elements have attribute audience=\"internal\" and must be removed:\\n\\n';\n\n                elementsWithAudienceInternal.forEach( element => {\n                    this.results += `<${ element.tagName }>\\n`;\n                } );\n\n                this.results += '\\n';\n\n                return false;\n            }\n\n            return true;\n        },\n        validateRepository() {\n            if ( this.uploadedFindingAid.repository ) {\n                if ( this.recognizedRepositoryNames.includes( this.uploadedFindingAid.repository ) ) {\n                    if ( ! this.currentRepositoryNames.includes( this.uploadedFindingAid.repository ) ) {\n                        this.results += this.getErrorHeader(\n                            `User ${ this.currentUser } is not currently authorized` +\n                            ` to create a finding aid for repository \"${ this.uploadedFindingAid.repository }\".` );\n\n                        return false;\n                    }\n                } else {\n                    this.results += this.getErrorHeader( 'Invalid <repository>' ) +\n`<repository> contains unknown repository name \"${ this.uploadedFindingAid.repository }\".\nThe repository name must match a value from this list:\n\n${ this.recognizedRepositoryNames.join( '\\n' ) }\n\n`;\n\n                    return false;\n                }\n            }\n\n            return true;\n        },\n        validateRoleAttributes( eadDoc ) {\n            const tagListsForElementsToValidate = [\n                [ 'controlaccess', 'corpname' ],\n                [ 'controlaccess', 'famname'  ],\n                [ 'controlaccess', 'persname' ],\n                [ 'origination',   'corpname' ],\n                [ 'origination',   'famname' ],\n                [ 'origination',   'persname' ],\n                [ 'repository',    'corpname' ],\n            ];\n\n            const elementsWithInvalidRoleAttributeErrors = [];\n\n            tagListsForElementsToValidate.forEach( tagListForElementToValidate => {\n                const selector = tagListForElementToValidate.join( ' ' ) + '[ role ]';\n                const elements = eadDoc.querySelectorAll( selector );\n\n                elements.forEach( element => {\n                    const roleAttribute = ( element.getAttribute( 'role' ) );\n\n                    if ( ! validRelatorCodes.includes( roleAttribute ) ) {\n                        elementsWithInvalidRoleAttributeErrors.push( {\n                            tagList       : tagListForElementToValidate,\n                            elementText   : element.textContent,\n                            roleAttribute : roleAttribute,\n                        } );\n                    }\n                } );\n            } );\n\n            if ( elementsWithInvalidRoleAttributeErrors.length > 0 ) {\n                this.results += this.getErrorHeader( 'Unrecognized relator codes' ) +\n                                'The EAD file contains elements with role attributes containing unrecognized relator codes' +\n                                ':\\n\\n';\n\n                elementsWithInvalidRoleAttributeErrors.forEach( elementWithInvalidRoleAttributeError => {\n                    const tagList = elementWithInvalidRoleAttributeError.tagList.slice();\n\n                    function wrap( inner, tagList ) {\n                        if ( tagList.length === 0 ) {\n                            return inner;\n                        }\n\n                        const nextTag = tagList.pop();\n                        return wrap( `<${ nextTag }>${ inner }</${ nextTag }>`, tagList );\n                    }\n\n                    const element = wrap(\n                        elementWithInvalidRoleAttributeError.elementText,\n                        tagList,\n                    );\n\n                    this.results +=\n                        `${ element } has role=\"${ elementWithInvalidRoleAttributeError.roleAttribute }\"\\n`;\n                } );\n\n                this.results += '\\n';\n\n                return false;\n            }\n\n            return true;\n        },\n        validateXML( eadDoc ) {\n            const parserErrorCount = eadDoc.documentElement\n                .getElementsByTagName( 'parsererror' ).length;\n\n            if ( parserErrorCount > 0 ) {\n                this.results += this.getErrorHeader( 'The XML in this file is not valid.  Please check it ' +\n                    'using an XML validator.' );\n\n                return false;\n            }\n\n            return true;\n        },\n        ...mapActions(\n            [\n                'addInProcessFindingAid',\n                'setHelpModal',\n            ],\n        ),\n    },\n};\n</script>\n\n<!-- Add \"scoped\" attribute to limit CSS to this component only -->\n<style scoped>\n#header {\n    margin-top : 3%;\n}\n\n#results-col {\n    height : 380px;\n}\n\n#results-textarea {\n    border : solid black 1px;\n    font-family : \"Courier\";\n    padding : 1%;\n}\n\n#upload-row {\n    padding : 2%;\n}\n\n.button {\n    margin : 1%;\n}\n\n.row {\n    padding : 1%;\n}\n</style>\n","<template>\n    <div>\n        <b-container\n            id=\"main-container\"\n            class=\"main-container h-100\"\n        >\n            <h1>Log in to the Finding Aids Manager</h1>\n\n            <b-row\n                id=\"feedback-row\"\n                align-h=\"center\"\n            >\n                <b-col cols=\"6\">\n                    <div id=\"feedback\">\n                        {{ feedback }}\n                    </div>\n\n                    <b-spinner v-if=\"showSpinner\" />\n                </b-col>\n            </b-row>\n\n            <b-form @submit.prevent=\"clickSignIn\">\n                <b-row\n                    id=\"username-row\"\n                    align-h=\"center\"\n                >\n                    <b-col cols=\"2\">\n                        <label for=\"username\">Username</label>\n                    </b-col>\n                    <b-col cols=\"4\">\n                        <b-form-input\n                            id=\"username\"\n                            v-model=\"username\"\n                        />\n                    </b-col>\n                </b-row>\n\n                <b-row\n                    align-h=\"center\"\n                    class=\"my-1\"\n                >\n                    <b-col cols=\"2\">\n                        <label for=\"password\">Password</label>\n                    </b-col>\n                    <b-col cols=\"4\">\n                        <b-form-input\n                            id=\"password\"\n                            v-model=\"password\"\n                            type=\"password\"\n                        />\n                    </b-col>\n                </b-row>\n\n                <b-row\n                    align-h=\"center\"\n                    class=\"my-1\"\n                >\n                    <b-col cols=\"6\">\n                        <button\n                            id=\"sign-in-button\"\n                        >\n                            Sign In\n                        </button>\n                    </b-col>\n                </b-row>\n            </b-form>\n        </b-container>\n    </div>\n</template>\n\n<script>\nimport { mapActions, mapGetters } from 'vuex';\n\nexport default {\n    name     : 'Login',\n    data() {\n        return {\n            feedback : '',\n            username : '',\n            password : '',\n\n            showSpinner : false,\n        };\n    },\n    computed : {\n        ...mapGetters(\n            [\n                'currentUser',\n                'repositories',\n                'users',\n            ],\n        ),\n    },\n    mounted() {\n        const userList = this.users.map( user => {\n            return `<li>${ user } - ${ this.getRepositoryCodesForUser( user ).join( ', ' ) }</li>`;\n        } ).join( '\\n' );\n        this.setHelpModal(\n            {\n                content : `\n<p>Each FAM user is granted permissions to a specific group of repositories.\nThis interactive mockup comes with a single user whose password is \"password\":</p>\n<ul>\n${ userList }\n</ul>\n\n<p>Some things to try:</p>\n\n<ul>\n    <li>Log in one or more times with an incorrect username or password</li>\n</ul>\n`,\n                title   : 'Login screen',\n            },\n        );\n    },\n    methods : {\n        async clickSignIn() {\n            this.feedback = '';\n            this.showSpinner = true;\n\n            await this.$sleep( 300 );\n\n            this.showSpinner = false;\n\n            this.setCurrentUser( this.username );\n            this.setCurrentRepositoryCodes( this.getRepositoryCodesForUser( this.username ) );\n            this.setCurrentRepositoryNames( this.getRepositoryNamesForUser( this.username ) );\n\n            if ( this.users.includes( this.username ) && this.password === 'password' ) {\n                this.$router.push( { name : 'home' } );\n            } else {\n                this.feedback = 'Invalid username and password combination';\n            }\n        },\n        getRepositoryCodesForUser( user ) {\n            const repositoryCodesForUser = [];\n\n            Object.keys( this.repositories ).forEach( repository => {\n                if ( this.repositories[ repository ].archivists.includes( user ) ) {\n                    repositoryCodesForUser.push( repository );\n                }\n            } );\n\n            return repositoryCodesForUser.sort();\n        },\n        getRepositoryNamesForUser( user ) {\n            const repositoryNamesForUser = [];\n\n            Object.keys( this.repositories ).forEach( repositoryCode => {\n                const repository = this.repositories[ repositoryCode ];\n                if ( repository.archivists.includes( user ) ) {\n                    repositoryNamesForUser.push( repository.name );\n                }\n            } );\n\n            return repositoryNamesForUser.sort();\n        },\n        ...mapActions(\n            [\n                'setCurrentRepositoryCodes',\n                'setCurrentRepositoryNames',\n                'setCurrentUser',\n                'setHelpModal',\n            ],\n        ),\n    },\n};\n\n</script>\n\n<!-- Add \"scoped\" attribute to limit CSS to this component only -->\n<style scoped>\n#login-header {\n    margin-top: 5%;\n}\n\n#feedback {\n    color: red;\n}\n\n#feedback-row {\n    padding-top: 5%;\n}\n\n#main-container {\n    padding-top: 5%;\n}\n\n#username-row {\n    padding-top: 5%;\n}\n\n#sign-in-button {\n    margin-top: 5%;\n}\n</style>\n","<template>\n    <div>\n        <b-container\n            id=\"main-container\"\n            class=\"main-container h-100\"\n        >\n            <b-row\n                id=\"welcome-row\"\n                align-v=\"center\"\n            >\n                <b-col>\n                    <h1>\n                        Here you will see the preview for {{ previewType }} {{ $route.params.repositoryCode }}/{{ $route.params.id }}.\n                        It might be at a different URL than what is used here in this mockup.\n                    </h1>\n                </b-col>\n            </b-row>\n        </b-container>\n    </div>\n</template>\n\n<script>\nimport { mapActions, mapGetters } from 'vuex';\n\nexport default {\n    name       : 'Preview',\n    props      : {},\n    computed : {\n        previewType() {\n            if ( this.$route.params.type === 'ead' ) {\n                return 'EAD file';\n            } else if ( this.$route.params.type === 'finding-aid' ) {\n                return 'finding aid';\n            } else {\n                return '[UNKNOWN TYPE]';\n            }\n        },\n        ...mapGetters(\n            [\n                'currentUser',\n            ],\n        ),\n    },\n    mounted() {\n        // Not doing currentUser check and routing to Login if no logged\n        // in user because Preview will always be opened in new tab.\n        this.setHelpModal(\n            {\n                content : 'TODO',\n                title   : 'Preview',\n            },\n        );\n    },\n    methods : {\n        ...mapActions(\n            [\n                'setHelpModal',\n            ],\n        ),\n    },\n};\n</script>\n\n<!-- Add \"scoped\" attribute to limit CSS to this component only -->\n<style scoped>\nh1 {\n    margin-top : 30%;\n}\n</style>\n","<template>\n    <div>\n        <b-container\n            id=\"main-container\"\n            class=\"main-container h-100\"\n        >\n            <navbar />\n\n            <h1 id=\"header\">\n                Manage in-process finding aids\n            </h1>\n\n            <b-row id=\"controls-row\">\n                <b-col\n                    class=\"my-1 text-left\"\n                    cols=\"6\"\n                >\n                    {{ totalRows.toLocaleString() }} finding aids found\n                </b-col>\n\n                <b-col\n                    class=\"my-1 text-right\"\n                    cols=\"2\"\n                >\n                    <b-form-group\n                        id=\"per-page-form-group\"\n                        label=\"Per page\"\n                        label-align=\"right\"\n                        label-cols=\"6\"\n                        label-size=\"sm\"\n                        label-for=\"per-page-select\"\n                        class=\"mb-0\"\n                    >\n                        <b-form-select\n                            v-model=\"perPage\"\n                            size=\"sm\"\n                            :options=\"pageOptions\"\n                        />\n                    </b-form-group>\n                </b-col>\n\n                <b-col\n                    class=\"my-1\"\n                >\n                    <b-pagination\n                        v-model=\"currentPage\"\n                        :total-rows=\"totalRows\"\n                        :per-page=\"perPage\"\n                        align=\"fill\"\n                        size=\"sm\"\n                        class=\"my-0\"\n                    />\n                </b-col>\n            </b-row>\n\n            <!-- Main table element -->\n            <b-table\n                ref=\"table\"\n                bordered\n                striped\n                show-empty\n                small\n                stacked=\"md\"\n                :items=\"items\"\n                :fields=\"fields\"\n                :current-page=\"currentPage\"\n                :per-page=\"perPage\"\n                :filter=\"filter\"\n                :filter-function=\"customFilter\"\n                :sort-by.sync=\"sortBy\"\n                :sort-direction=\"sortDirection\"\n                @filtered=\"onFiltered\"\n            >\n                <template v-slot:head(id)=\"data\">\n                    <b-form-group\n                        :label=\"data.label\"\n                        label-cols=\"auto\"\n                        label-align-sm=\"left\"\n                        label-for=\"id-filter\"\n                        class=\"mb-0\"\n                    >\n                        <b-input-group size=\"sm\">\n                            <b-form-input\n                                id=\"id-filter\"\n                                v-model=\"filter.id\"\n                                debounce=\"500\"\n                                type=\"search\"\n                            />\n                        </b-input-group>\n                    </b-form-group>\n                </template>\n\n                <template v-slot:head(repository)=\"data\">\n                    <b-form-group\n                        :label=\"data.label\"\n                        label-cols=\"auto\"\n                        label-align-sm=\"left\"\n                        label-for=\"repository-filter\"\n                        class=\"mb-0\"\n                    >\n                        <b-form-select\n                            id=\"repository-filter\"\n                            v-model=\"filter.repository\"\n                            :options=\"repositoryFilterOptions\"\n                            size=\"sm\"\n                        />\n                    </b-form-group>\n                </template>\n\n                <template v-slot:cell(actions)=\"row\">\n                    <span\n                        ref=\"toggle-details-span\"\n                        class=\"h1\"\n                    >\n                        <b-icon\n                            v-if=\"row.detailsShowing\"\n                            icon=\"caret-down-fill\"\n                            @click=\"row.toggleDetails\"\n                        />\n                        <b-icon\n                            v-else\n                            icon=\"caret-right-fill\"\n                            @click=\"row.toggleDetails\"\n                        />\n                    </span>\n                </template>\n\n                <template v-slot:cell(id)=\"row\">\n                    <div @click=\"row.toggleDetails\">\n                        {{ row.item.id }}\n                    </div>\n                </template>\n\n                <template v-slot:cell(repository)=\"row\">\n                    <div @click=\"row.toggleDetails\">\n                        {{ row.item.repository }}\n                    </div>\n                </template>\n\n                <template v-slot:cell(timestamp)=\"row\">\n                    <div @click=\"row.toggleDetails\">\n                        {{ row.value }}\n                    </div>\n                </template>\n\n                <template v-slot:row-details=\"row\">\n                    <div>\n                        <b-button\n                            class=\"action-button\"\n                            :to=\"{ name : 'preview', params : { type : 'finding-aid', repositoryCode : row.item.repositoryCode, id : row.item.id } }\"\n                            target=\"_blank\"\n                        >\n                            View finding aid preview\n                        </b-button>\n\n                        <b-button\n                            class=\"action-button\"\n                            :to=\"{ name : 'preview', params : { type : 'ead', repositoryCode : row.item.repositoryCode, id : row.item.id } }\"\n                            target=\"_blank\"\n                        >\n                            View EAD file preview\n                        </b-button>\n\n                        <b-button\n                            class=\"action-button\"\n                            :data-id=\"row.item.id\"\n                            :data-repository-code=\"row.item.repositoryCode\"\n                            :data-title=\"row.item.title\"\n                            @click=\"clickPublishInProcessFindingAid\"\n                        >\n                            Publish finding aid\n                        </b-button>\n\n                        <b-button\n                            class=\"action-button\"\n                            :data-id=\"row.item.id\"\n                            :data-repository-code=\"row.item.repositoryCode\"\n                            variant=\"danger\"\n                            @click=\"clickDeleteInProcessFindingAid\"\n                        >\n                            Delete in-process finding aid\n                        </b-button>\n                    </div>\n                </template>\n            </b-table>\n        </b-container>\n\n        <b-modal\n            id=\"confirm-deletion-modal\"\n            header-text-variant=\"danger\"\n            size=\"lg\"\n            centered\n            title=\"Confirm deletion\"\n            ok-title=\"Delete\"\n            ok-variant=\"danger\"\n            @cancel=\"cancelDeleteInProcessFindingAid\"\n            @ok=\"confirmDeleteInProcessFindingAid\"\n        >\n            <p>\n                Are you sure you wish to delete preview finding aid {{ findingAidToDelete.repositoryCode }}/{{ findingAidToDelete.id }}?\n            </p>\n            <p>This will delete the following:</p>\n            <p></p>\n            <ul>\n                <li>\n                    Preview finding aid: {{ previewFindingAidToDeleteFullURL }}\n                </li>\n                <li>\n                    Preview EAD file: {{ previewEADFileToDeleteFullURL }}\n                </li>\n            </ul>\n        </b-modal>\n\n        <b-modal\n            id=\"deletion-in-progress-modal\"\n            centered\n            no-close-on-esc\n            no-close-on-backdrop\n            hide-footer\n            hide-header-close\n            title=\"Deleting in-process finding aid...\"\n        >\n            <b-row>\n                <b-col />\n                <b-col align=\"center\">\n                    <b-spinner />\n                </b-col>\n                <b-col />\n            </b-row>\n        </b-modal>\n\n        <b-modal\n            id=\"confirm-publish-modal\"\n            header-text-variant=\"danger\"\n            size=\"lg\"\n            centered\n            title=\"Confirm publication\"\n            ok-title=\"Publish\"\n            ok-variant=\"danger\"\n            @cancel=\"cancelPublishInProcessFindingAid\"\n            @ok=\"queuePublishInProcessFindingAid\"\n        >\n            <p>\n                Are you sure you wish to publish in-process finding aid\n                {{ findingAidToPublish.repositoryCode }}/{{ findingAidToPublish.id }}?\n            </p>\n            <p>\n                This will publish data to the following locations, overwriting whatever might already be there:\n            </p>\n            <p></p>\n            <ul>\n                <li>\n                    Finding aid HTML:\n                    http://dlib.nyu.edu/findingaids/html/{{ findingAidToPublish.repositoryCode }}/{{ findingAidToPublish.id }}/\n                </li>\n                <li>\n                    Public EAD file:\n                    http://dlib.nyu.edu/findingaids/ead/{{ findingAidToPublish.repositoryCode }}/{{ findingAidToPublish.id }}.xml\n                </li>\n                <li>\n                    Github EAD file:\n                    https://github.com/NYULibraries/findingaids_eads/blob/master/{{ findingAidToPublish.repositoryCode }}/{{ findingAidToPublish.id }}.xml\n                </li>\n            </ul>\n\n            <p></p>\n\n            <p>\n                It will also update the search data and results in the Archival collections search located at: https://specialcollections.library.nyu.edu/search/\n            </p>\n        </b-modal>\n\n        <b-modal\n            id=\"queuing-publish-modal\"\n            centered\n            no-close-on-esc\n            no-close-on-backdrop\n            hide-footer\n            hide-header-close\n            title=\"Queueing for publication...\"\n        >\n            <b-row>\n                <b-col />\n                <b-col align=\"center\">\n                    <b-spinner />\n                </b-col>\n                <b-col />\n            </b-row>\n        </b-modal>\n\n        <b-modal\n            id=\"publication-has-been-queued-modal\"\n            size=\"lg\"\n            centered\n            title=\"Publication complete\"\n            @ok=\"clickAcknowledgePublicationHasBeenQueued\"\n        >\n            <p>\n                The finding aid and the public EAD file have been published.\n                The EAD file should be added to the Github repo in [X time].\n                The search data will be refreshed after the repo update.\n            </p>\n\n            <p>\n                Links (will pop up new browser tabs):\n            </p>\n\n            <ul>\n                <li>\n                    Finding aid HTML:\n                    <a\n                        :href=\"`http://dlib.nyu.edu/findingaids/html/${ findingAidToPublish.repositoryCode }/${ findingAidToPublish.id }/`\"\n                        target=\"_blank\"\n                    >\n                        http://dlib.nyu.edu/findingaids/html/{{ findingAidToPublish.repositoryCode }}/{{ findingAidToPublish.id }}/\n                    </a>\n                </li>\n                <li>\n                    Public EAD file:\n                    <a\n                        :href=\"`http://dlib.nyu.edu/findingaids/ead/{{ findingAidToPublish.repositoryCode }}/{{ findingAidToPublish.id }}.xml`\"\n                        target=\"_blank\"\n                    >\n                        http://dlib.nyu.edu/findingaids/ead/{{ findingAidToPublish.repositoryCode }}/{{ findingAidToPublish.id }}.xml\n                    </a>\n                </li>\n                <li>\n                    Github EAD file:\n                    <a\n                        :href=\"`https://github.com/NYULibraries/findingaids_eads/blob/master/{{ findingAidToPublish.repositoryCode }}/{{ findingAidToPublish.id }}.xml`\"\n                        target=\"_blank\"\n                    >\n                        https://github.com/NYULibraries/findingaids_eads/blob/master/{{ findingAidToPublish.repositoryCode }}/{{ findingAidToPublish.id }}.xml\n                    </a>\n                </li>\n                <li>\n                    Archival collections search:\n                    <a\n                        href=\"https://specialcollections.library.nyu.edu/search/\"\n                        target=\"_blank\"\n                    >\n                        https://specialcollections.library.nyu.edu/search/\n                    </a>\n                </li>\n            </ul>\n\n            <template v-slot:modal-footer=\"{ ok }\">\n                <b-button\n                    variant=\"primary\"\n                    @click=\"ok()\"\n                >\n                    OK\n                </b-button>\n            </template>\n        </b-modal>\n    </div>\n</template>\n\n<script>\nimport { mapActions, mapGetters } from 'vuex';\n\nimport moment from 'moment';\n\nimport Navbar from './Navbar';\n\nconst FADESIGN_116_CHANGING_FINDING_AID_ID = 'fadesign_116_changed';\nconst FADESIGN_116_DISAPPEARING_FINDING_AID_ID = 'fadesign_116_deleted';\nconst FADESIGN_117_CHANGING_FINDING_AID_ID = 'fadesign_117_changed';\nconst FADESIGN_117_DISAPPEARING_FINDING_AID_ID = 'fadesign_117_deleted';\n\nexport default {\n    name       : 'ManageInProcessFindingAids',\n    components : {\n        Navbar,\n    },\n    data() {\n        return {\n            blockDeletionOrPublicationOfFadesign116Changed : true,\n            blockDeletionOrPublicationOfFadesign117Changed : true,\n            fields                                         : [\n                {\n                    key   : 'actions',\n                    label : '',\n                    class : 'text-left text-nowrap',\n                },\n                {\n                    key           : 'id',\n                    label         : 'ID',\n                    sortable      : true,\n                    sortDirection : 'asc',\n                    class         : 'text-left',\n                },\n                {\n                    key           : 'repository',\n                    label         : 'Repository',\n                    sortable      : true,\n                    sortDirection : 'asc',\n                    class         : 'text-left',\n                },\n                {\n                    key               : 'timestamp',\n                    label             : 'Timestamp',\n                    formatter         : ( timestamp ) => {\n                        return this.$getFormattedTimestamp( timestamp );\n                    },\n                    sortable          : true,\n                    sortDirection     : 'desc',\n                    filterByFormatted : true,\n                    class             : 'text-left text-nowrap',\n                },\n            ],\n            items         : null,\n            totalRows     : 0,\n            currentPage   : 1,\n            perPage       : 10,\n            pageOptions   : [ 10, 25, 50, 100 ],\n            sortBy        : 'repository',\n            sortDirection : 'asc',\n            filter        : {\n                id         : null,\n                repository : null,\n                title      : null,\n            },\n            filterOn           : [ 'title' ],\n            findingAidToDelete : {\n                id             : null,\n                repositoryCode : null,\n            },\n            findingAidToPublish : {\n                id             : null,\n                repositoryCode : null,\n                title          : null,\n            },\n        };\n    },\n    computed   : {\n        previewEADFileToDeleteFullURL() {\n            return this.previewToDeleteFullURL( 'ead' );\n        },\n        previewFindingAidToDeleteFullURL() {\n            return this.previewToDeleteFullURL( 'finding-aid' );\n        },\n        repositoryFilterOptions() {\n            const options = this.currentRepositoryNames.map( repositoryName => {\n                return {\n                    value : repositoryName,\n                    text  : repositoryName,\n                };\n            } );\n\n            options.unshift(\n                {\n                    value : null,\n                    text  : 'All',\n                },\n            );\n\n            return options;\n        },\n        ...mapGetters(\n            [\n                'currentRepositoryCodes',\n                'currentRepositoryNames',\n                'currentUser',\n                'inProcessFindingAids',\n                'repositories',\n            ],\n        ),\n    },\n    watch      : {},\n    mounted() {\n        if ( ! this.currentUser ) {\n            this.$router.push( { name : 'login' } );\n\n            return;\n        }\n\n        this.refreshTableItems();\n\n        this.totalRows = this.items.length;\n\n        this.setHelpModal(\n            {\n                content : `Some things to try:\n\n<br>\n<br>\n\n<ul>\n    <li>Filter by:\n        <ul>\n            <li>Repository</li>\n            <li>ID</li>\n        </ul>\n    </li>\n    <li>Sort (ascending and descending) by:\n        <ul>\n            <li>Repository</li>\n            <li>ID</li>\n            <li>Timestamp</li>\n        </ul>\n    </li>\n    <li>Select different per page options from the dropdown</li>\n    <li>Navigate to different pages using page navigator buttons</li>\n    <li>Expand the Actions row for one or more finding aids rows</li>\n    <li>Expand the Actions row for a finding aid and click the \"View finding aid preview\" button</li>\n    <li>Expand the Actions row for a finding aid and click the \"View EAD file preview\" button</li>\n    <li>Expand the Actions row for a finding aid and click the \"Publish finding aid\" button\n    (do not choose a finding aid with an ID that starts with \"fadesign_116_\" or \"fadesign_117_\")</li>\n    <li>Expand the Actions row for a finding aid and click the \"Delete in-process finding aid\" button\n    (do not choose a finding aid with an ID that starts with \"fadesign_116_\" or \"fadesign_117_\")</li>\n    <li>Expand the Actions row for the finding aid with ID = \"fadesign_116_changed\",\n    note the timestamp, and then click the \"Delete in-process finding aid\" button.\n    This initial deletion attempt will be blocked.  After dismissing the pop-up that\n    explains why the deletion was blocked, note the new timestamp on the finding aid,\n    expand the Actions row, and click the \"Delete in-process finding aid\" button again.\n    </li>\n    <li>Expand the Actions row for the finding aid with ID = \"fadesign_116_deleted\" and click the \"Delete in-process finding aid\" button</li>\n    <li>Expand the Actions row for the finding aid with ID = \"fadesign_117_changed\",\n    note the timestamp, and then click the \"Publish finding aid\" button.\n    This initial publication attempt will be blocked.  After dismissing the pop-up that\n    explains why the publication was blocked, note the new timestamp on the finding aid,\n    expand the Actions row, and click the \"Publish finding aid\" button again.\n    </li>\n    <li>Expand the Actions row for the finding aid with ID = \"fadesign_117_deleted\" and click the \"Publish finding aid\" button</li>\n</ul>\n`,\n                title   : 'Manage In-Process Finding Aids screen',\n            },\n        );\n    },\n    methods    : {\n        cancelDeleteInProcessFindingAid() {\n            this.clearDeleteInProcess();\n        },\n        cancelPublishInProcessFindingAid() {\n            this.clearPublishInProcess();\n        },\n        clearDeleteInProcess() {\n            this.findingAidToDelete.id = null;\n            this.findingAidToDelete.repositoryCode = null;\n        },\n        clearPublishInProcess() {\n            this.findingAidToPublish.id = null;\n            this.findingAidToPublish.repositoryCode = null;\n        },\n        clickAcknowledgePublicationHasBeenQueued() {\n            this.refreshTableItems();\n            this.$refs.table.refresh();\n\n            this.clearPublishInProcess();\n        },\n        clickDeleteInProcessFindingAid( event ) {\n            this.findingAidToDelete.id = event.currentTarget.dataset.id;\n            this.findingAidToDelete.repositoryCode = event.currentTarget.dataset.repositoryCode;\n\n            this.$bvModal.show( 'confirm-deletion-modal' );\n        },\n        clickPublishInProcessFindingAid( event ) {\n            this.findingAidToPublish.id = event.currentTarget.dataset.id;\n            this.findingAidToPublish.repositoryCode = event.currentTarget.dataset.repositoryCode;\n            this.findingAidToPublish.title = event.currentTarget.dataset.title;\n\n            this.$bvModal.show( 'confirm-publish-modal' );\n        },\n        // Originally this was deleteInProcessFindingAid, which conflicts with\n        // Vuex action of the same name.\n        async confirmDeleteInProcessFindingAid() {\n            this.$bvModal.show( 'deletion-in-progress-modal' );\n\n            await this.$sleep( 1000 );\n\n            this.$bvModal.hide( 'deletion-in-progress-modal' );\n\n            let message, title;\n            if ( this.findingAidToDelete.id === FADESIGN_116_CHANGING_FINDING_AID_ID &&\n                 this.blockDeletionOrPublicationOfFadesign116Changed ) {\n                // Don't delete the trick finding aid.\n            } else {\n                this.deleteInProcessFindingAid(\n                    {\n                        id         : this.findingAidToDelete.id,\n                        repository : this.findingAidToDelete.repositoryCode,\n                    },\n                );\n\n                message = 'The in-process finding aid has been deleted.';\n                title = 'Deletion completed';\n            }\n\n            if (\n                this.findingAidToDelete.id === FADESIGN_116_CHANGING_FINDING_AID_ID &&\n                this.blockDeletionOrPublicationOfFadesign116Changed\n            ) {\n                this.inProcessFindingAids.archives[ FADESIGN_116_CHANGING_FINDING_AID_ID ].timestamp =\n                    moment().subtract( 1, 'minutes' ).unix();\n                message =\n                    'The deletion of the in-process finding aid has been cancelled ' +\n                    'because the EAD file on the server has been updated and ' +\n                    'has a new timestamp of ' +\n                    this.$getFormattedTimestamp(\n                        this.inProcessFindingAids.archives[ FADESIGN_116_CHANGING_FINDING_AID_ID ].timestamp,\n                    ) + '.  ' +\n                    'It is recommended that you preview this updated in-process EAD file ' +\n                    'before deleting it.';\n                title = 'In-process finding aid deletion cancelled';\n\n                // Allow the user to delete the finding aid after this initial attempt.\n                this.blockDeletionOrPublicationOfFadesign116Changed = false;\n            } else if ( this.findingAidToDelete.id === FADESIGN_116_DISAPPEARING_FINDING_AID_ID ) {\n                message =\n                    'The in-process finding aid may have already been deleted by another ' +\n                    'user.';\n                title = 'In-process finding aid not found';\n            }\n\n            this.clearDeleteInProcess();\n\n            const that = this;\n            this.$bvModal.msgBoxOk( message, {\n                centered : true,\n                title    : title,\n            } ).then(\n                function () {\n                    that.refreshTableItems();\n\n                    that.$refs.table.refresh();\n                },\n            );\n        },\n        customFilter( row, filterProp ) {\n            for ( const filter in filterProp ) {\n                const filterValue = filterProp[ filter ];\n\n                if ( filterValue && ! row[ filter ].toLowerCase().includes( filterValue.toLowerCase() ) ) {\n                    return false;\n                }\n            }\n\n            return true;\n        },\n        getItems() {\n            const items = [];\n\n            Object.keys( this.inProcessFindingAids ).forEach( repositoryCode => {\n                if ( this.currentRepositoryCodes.includes( repositoryCode ) ) {\n                    const findingAids = this.inProcessFindingAids[ repositoryCode ];\n\n                    Object.keys( findingAids ).forEach( id => {\n                        const findingAid = findingAids[ id ];\n\n                        items.push(\n                            {\n                                repository     : `${ this.repositories[ repositoryCode ].name } (${ repositoryCode })`,\n                                repositoryCode : repositoryCode,\n                                id             : id,\n                                title          : findingAid.title,\n                                timestamp       : findingAid.timestamp,\n                            },\n                        );\n                    } );\n                }\n            } );\n\n            return items;\n        },\n        onFiltered( filteredItems ) {\n            // Trigger pagination to update the number of buttons/pages due to filtering\n            this.totalRows = filteredItems.length;\n            this.currentPage = 1;\n        },\n        previewToDeleteFullURL( type ) {\n            return window.location.href.replace( '/#/in-process', '' ) +\n                   '/' +\n                   this.$router.resolve(\n                       {\n                           name   : 'preview',\n                           params : {\n                               type           : type,\n                               repositoryCode : this.findingAidToDelete.repositoryCode,\n                               id             : this.findingAidToDelete.id,\n                           },\n                       },\n                   ).href;\n        },\n        async queuePublishInProcessFindingAid() {\n            this.$bvModal.show( 'queuing-publish-modal' );\n\n            await this.$sleep( 1000 );\n\n            this.$bvModal.hide( 'queuing-publish-modal' );\n\n            let abortPublication, message, title;\n            if ( this.findingAidToPublish.id === FADESIGN_117_CHANGING_FINDING_AID_ID ) {\n                if ( this.blockDeletionOrPublicationOfFadesign117Changed  ) {\n                    // Don't allow this initial attempt to publish the changed finding aid.\n\n                    // Update the timestamp to simulate another user updating the finding\n                    // aid one minute ago.\n                    this.inProcessFindingAids.archives[ FADESIGN_117_CHANGING_FINDING_AID_ID ].timestamp =\n                        moment().subtract( 1, 'minutes' ).unix();\n\n                    // Allow the user to delete the finding aid after this initial attempt.\n                    this.blockDeletionOrPublicationOfFadesign117Changed = false;\n\n                    message =\n                        'The publication of the in-process finding aid has been cancelled ' +\n                        'because the EAD file on the server has been updated and ' +\n                        'has a new timestamp of ' +\n                        this.$getFormattedTimestamp(\n                            this.inProcessFindingAids.archives[ FADESIGN_117_CHANGING_FINDING_AID_ID ].timestamp,\n                        ) + '.  ' +\n                        'It is recommended that you preview this updated in-process EAD file ' +\n                        'before publishing it.';\n                    title = 'Finding aid publication cancelled';\n\n                    abortPublication = true;\n                } else {\n                    // Allow user to publish after block has been cleared.\n                }\n            } else if ( this.findingAidToPublish.id === FADESIGN_117_DISAPPEARING_FINDING_AID_ID ) {\n                message = 'The in-process finding aid may have been deleted or published by another user.';\n                title = 'In-process finding aid not found';\n\n                this.deleteInProcessFindingAid(\n                    {\n                        id         : this.findingAidToPublish.id,\n                        repository : this.findingAidToPublish.repositoryCode,\n                    },\n                );\n\n                abortPublication = true;\n            } else {\n                // Do nothing.\n            }\n\n            if ( abortPublication ) {\n                const that = this;\n                this.$bvModal.msgBoxOk( message, {\n                    centered : true,\n                    title    : title,\n                } ).then(\n                    function () {\n                        that.refreshTableItems();\n\n                        that.$refs.table.refresh();\n                    },\n                );\n\n                return;\n            }\n\n            this.publishInProcessFindingAid(\n                {\n                    timestamp   : Math.round( ( new Date() ).getTime() / 1000 ),\n                    id         : this.findingAidToPublish.id,\n                    repository : this.findingAidToPublish.repositoryCode,\n                    title      : this.findingAidToPublish.title,\n                },\n            );\n\n            this.deleteInProcessFindingAid(\n                {\n                    id         : this.findingAidToPublish.id,\n                    repository : this.findingAidToPublish.repositoryCode,\n                },\n            );\n\n            this.$bvModal.show( 'publication-has-been-queued-modal' );\n        },\n        refreshTableItems() {\n            this.items = this.getItems();\n        },\n        ...mapActions(\n            [\n                'setHelpModal',\n                'addInProcessFindingAid',\n                'deleteInProcessFindingAid',\n                'publishInProcessFindingAid',\n            ],\n        ),\n    },\n};\n</script>\n\n<!-- Add \"scoped\" attribute to limit CSS to this component only -->\n<style scoped>\n    .action-button {\n        margin-bottom : 2%;\n        margin-left   : 2%;\n        margin-right  : 2%;\n        margin-top    : 2%;\n    }\n\n    #controls-row {\n        margin-bottom : 1%;\n    }\n\n    #header {\n        margin-bottom : 3%;\n        margin-top : 3%;\n    }\n</style>\n","<template>\n    <div>\n        <b-container\n            id=\"main-container\"\n            class=\"main-container h-100\"\n        >\n            <navbar />\n\n            <h1 id=\"header\">\n                Manage published finding aids\n            </h1>\n\n            <b-row id=\"controls-row\">\n                <b-col\n                    class=\"my-1 text-left\"\n                    cols=\"6\"\n                >\n                    {{ totalRows.toLocaleString() }} finding aids found\n                </b-col>\n\n                <b-col\n                    class=\"my-1 text-right\"\n                    cols=\"2\"\n                >\n                    <b-form-group\n                        id=\"per-page-form-group\"\n                        label=\"Per page\"\n                        label-align=\"right\"\n                        label-cols=\"6\"\n                        label-size=\"sm\"\n                        label-for=\"per-page-select\"\n                        class=\"mb-0\"\n                    >\n                        <b-form-select\n                            v-model=\"perPage\"\n                            size=\"sm\"\n                            :options=\"pageOptions\"\n                        />\n                    </b-form-group>\n                </b-col>\n\n                <b-col\n                    class=\"my-1\"\n                >\n                    <b-pagination\n                        v-model=\"currentPage\"\n                        :total-rows=\"totalRows\"\n                        :per-page=\"perPage\"\n                        align=\"fill\"\n                        size=\"sm\"\n                        class=\"my-0\"\n                    />\n                </b-col>\n            </b-row>\n\n            <!-- Main table element -->\n            <b-table\n                ref=\"table\"\n                dark\n                empty-filtered-text=\"The are no finding aids matching your request.\"\n                striped\n                show-empty\n                small\n                stacked=\"md\"\n                :items=\"items\"\n                :fields=\"fields\"\n                :current-page=\"currentPage\"\n                :per-page=\"perPage\"\n                :filter=\"filter\"\n                :filter-function=\"customFilter\"\n                :sort-by.sync=\"sortBy\"\n                :sort-direction=\"sortDirection\"\n                @filtered=\"onFiltered\"\n            >\n                <template\n                    v-if=\"fetchInitialPublishedFindingAidsMetadata\"\n                    v-slot:emptyfiltered=\"\"\n                >\n                    <h4>\n                        Fetching latest Github EAD files snapshot\n                        <b-spinner />\n                    </h4>\n                </template>\n\n                <template v-slot:head(id)=\"data\">\n                    <b-form-group\n                        :label=\"data.label\"\n                        label-cols=\"auto\"\n                        label-align-sm=\"left\"\n                        label-for=\"id-filter\"\n                        class=\"mb-0\"\n                    >\n                        <b-input-group size=\"sm\">\n                            <b-form-input\n                                id=\"id-filter\"\n                                v-model=\"filter.id\"\n                                debounce=\"500\"\n                                type=\"search\"\n                            />\n                        </b-input-group>\n                    </b-form-group>\n                </template>\n\n                <template v-slot:head(repository)=\"data\">\n                    <b-form-group\n                        :label=\"data.label\"\n                        label-cols=\"auto\"\n                        label-align-sm=\"left\"\n                        label-for=\"repository-filter\"\n                        class=\"mb-0\"\n                    >\n                        <b-form-select\n                            id=\"repository-filter\"\n                            v-model=\"filter.repository\"\n                            :options=\"repositoryFilterOptions\"\n                            size=\"sm\"\n                        />\n                    </b-form-group>\n                </template>\n\n                <template v-slot:cell(actions)=\"row\">\n                    <span\n                        ref=\"toggle-details-span\"\n                        class=\"h1\"\n                    >\n                        <b-icon\n                            v-if=\"row.detailsShowing\"\n                            icon=\"caret-down-fill\"\n                            @click=\"row.toggleDetails\"\n                        />\n                        <b-icon\n                            v-else\n                            icon=\"caret-right-fill\"\n                            @click=\"row.toggleDetails\"\n                        />\n                    </span>\n                </template>\n\n                <template v-slot:cell(id)=\"row\">\n                    <div @click=\"row.toggleDetails\">\n                        {{ row.item.id }}\n                    </div>\n                </template>\n\n                <template v-slot:cell(repository)=\"row\">\n                    <div @click=\"row.toggleDetails\">\n                        {{ row.item.repository }}\n                    </div>\n                </template>\n\n                <template v-slot:cell(timestamp)=\"row\">\n                    <div @click=\"row.toggleDetails\">\n                        {{ row.value }}\n                    </div>\n                </template>\n\n                <template v-slot:row-details=\"row\">\n                    <div>\n                        <b-button\n                            class=\"action-button\"\n                            :href=\"`http://dlib.nyu.edu/findingaids/html/${ row.item.repositoryCode }/${ row.item.id }/`\"\n                            target=\"_blank\"\n                        >\n                            View finding aid\n                        </b-button>\n\n                        <b-button\n                            class=\"action-button\"\n                            :href=\"`http://dlib.nyu.edu/findingaids/ead/${ row.item.repositoryCode }/${ row.item.id }.xml`\"\n                            target=\"_blank\"\n                        >\n                            View EAD file\n                        </b-button>\n\n                        <b-button\n                            class=\"action-button\"\n                            :data-id=\"row.item.id\"\n                            :data-repository-code=\"row.item.repositoryCode\"\n                            variant=\"danger\"\n                            @click=\"clickDeleteFindingAid\"\n                        >\n                            Delete finding aid\n                        </b-button>\n                    </div>\n                </template>\n            </b-table>\n        </b-container>\n\n        <b-modal\n            id=\"confirm-delete-modal\"\n            header-text-variant=\"danger\"\n            size=\"lg\"\n            centered\n            title=\"Confirm deletion\"\n            ok-title=\"Delete\"\n            ok-variant=\"danger\"\n            @cancel=\"cancelDeleteFindingAid\"\n            @ok=\"queueDeleteFindingAid\"\n        >\n            <p>Are you sure you wish to delete {{ findingAidToDelete.repositoryCode }}/{{ findingAidToDelete.id }}?</p>\n            <p>This will delete the following:</p>\n            <p></p>\n            <ul>\n                <li>\n                    Finding aid HTML:\n                    http://dlib.nyu.edu/findingaids/html/{{ findingAidToDelete.repositoryCode }}/{{ findingAidToDelete.id }}/\n                </li>\n                <li>\n                    Public EAD file:\n                    http://dlib.nyu.edu/findingaids/ead/{{ findingAidToDelete.repositoryCode }}/{{ findingAidToDelete.id }}.xml\n                </li>\n                <li>\n                    Github EAD file:\n                    https://github.com/NYULibraries/findingaids_eads/blob/master/{{ findingAidToDelete.repositoryCode }}/{{ findingAidToDelete.id }}.xml\n                </li>\n            </ul>\n\n            <p></p>\n\n            <p>\n                It will also delete the search data and results in the Archival collections search located at: https://specialcollections.library.nyu.edu/search/\n            </p>\n        </b-modal>\n\n        <b-modal\n            id=\"queuing-delete-modal\"\n            centered\n            no-close-on-esc\n            no-close-on-backdrop\n            hide-footer\n            hide-header-close\n            title=\"Queueing for deletion...\"\n        >\n            <b-row>\n                <b-col />\n                <b-col align=\"center\">\n                    <b-spinner />\n                </b-col>\n                <b-col />\n            </b-row>\n        </b-modal>\n    </div>\n</template>\n\n<script>\nimport { mapActions, mapGetters } from 'vuex';\n\nimport moment from 'moment';\n\nimport Navbar from './Navbar';\n\nconst FADESIGN_118_CHANGING_FINDING_AID_ID = 'fadesign_118_changed';\nconst FADESIGN_118_DISAPPEARING_FINDING_AID_ID = 'fadesign_118_deleted';\n\nexport default {\n    name       : 'ManagePublishedFindingAids',\n    components : {\n        Navbar,\n    },\n    data() {\n        return {\n            blockDeletionOfFadesign118Changed : true,\n            currentPage                       : 1,\n            fields                            : [\n                {\n                    key   : 'actions',\n                    label : '',\n                    class : 'text-left text-nowrap',\n                },\n                {\n                    key           : 'id',\n                    label         : 'ID',\n                    sortable      : true,\n                    sortDirection : 'asc',\n                    class         : 'text-left',\n                },\n                {\n                    key           : 'repository',\n                    label         : 'Repository',\n                    sortable      : true,\n                    sortDirection : 'asc',\n                    class         : 'text-left',\n                },\n                {\n                    key               : 'timestamp',\n                    label             : 'Timestamp',\n                    formatter         : ( timestamp ) => {\n                        return this.$getFormattedTimestamp( timestamp );\n                    },\n                    sortable          : true,\n                    sortDirection     : 'desc',\n                    filterByFormatted : true,\n                    class             : 'text-left text-nowrap',\n                },\n            ],\n            filter                 : {\n                id         : null,\n                repository : null,\n                title      : null,\n            },\n            filterOn               : [ 'title' ],\n            findingAidToDelete  : {\n                id             : null,\n                repositoryCode : null,\n            },\n            items                  : null,\n            pageOptions            : [ 10, 25, 50, 100 ],\n            perPage                : 10,\n            sortBy                 : 'repository',\n            sortDirection          : 'asc',\n            totalRows              : 0,\n        };\n    },\n    computed   : {\n        repositoryFilterOptions() {\n            const options = this.currentRepositoryNames.map( repositoryName => {\n                return {\n                    value : repositoryName,\n                    text  : repositoryName,\n                };\n            } );\n\n            options.unshift(\n                {\n                    value : null,\n                    text  : 'All',\n                },\n            );\n\n            return options;\n        },\n        ...mapGetters(\n            [\n                'currentRepositoryCodes',\n                'currentRepositoryNames',\n                'currentUser',\n                'fetchInitialPublishedFindingAidsMetadata',\n                'publishedFindingAids',\n                'repositories',\n            ],\n        ),\n    },\n    watch      : {},\n    async mounted() {\n        if ( ! this.currentUser ) {\n            this.$router.push( { name : 'login' } );\n\n            return;\n        }\n\n        if ( this.fetchInitialPublishedFindingAidsMetadata ) {\n            await this.refreshTableItemsFromServer();\n\n            this.setFetchInitialPublishedFindingAidsMetadata( false );\n        } else {\n            this.refreshTableItemsFromStore();\n        }\n\n        this.totalRows = this.items.length;\n\n        this.setHelpModal(\n            {\n                content : `\n<p>\nThe first time the user navigates to <strong>Published FAs</strong>, the FAM will\nfetch the latest files metadata snapshots from the Github repo in order to populate\nthe finding aids table.  This is done on the initial visit to this page only.\nSubsequently navigating to another screen and then returning to this one will not\ntrigger a refresh of the data in the table.\n</p>\n\nSome things to try:\n\n<br>\n<br>\n\n<ul>\n    <li>Filter by:\n        <ul>\n            <li>Repository</li>\n            <li>ID</li>\n        </ul>\n    </li>\n    <li>Sort (ascending and descending) by:\n        <ul>\n            <li>Repository</li>\n            <li>ID</li>\n            <li>Timestamp</li>\n        </ul>\n    </li>\n    <li>Select different per page options from the dropdown</li>\n    <li>Navigate to different pages using page navigator buttons</li>\n    <li>Expand the Actions row for one or more finding aids rows</li>\n    <li>Expand the Actions row for a finding aid and click the \"View finding aid\" button</li>\n    <li>Expand the Actions row for a finding aid and click the \"View EAD file\" button</li>\n    <li>Expand the Actions row for a finding aid and click the \"Delete finding aid\" button\n    (do not choose a finding aid with an ID that starts with \"fadesign_118_\")</li>\n    <li>Expand the Actions row for the finding aid with ID = \"fadesign_118_changed\",\n    note the timestamp, and then click the \"Delete finding aid\" button.\n    This initial deletion attempt will be blocked.  After dismissing the pop-up that\n    explains why the deletion was blocked, note the new timestamp on the finding aid,\n    expand the Actions row, and click the \"Delete finding aid\" button again.\n    </li>\n    <li>Expand the Actions row for the finding aid with ID = \"fadesign_118_deleted\" and click the \"Delete finding aid\" button</li>\n</ul>\n`,\n                title   : 'Manage Published Finding Aids screen',\n            },\n        );\n    },\n    methods    : {\n        cancelDeleteFindingAid() {\n            this.clearDelete();\n        },\n        clearDelete() {\n            this.findingAidToDelete.id = null;\n            this.findingAidToDelete.repositoryCode = null;\n        },\n        clickDeleteFindingAid( event ) {\n            this.findingAidToDelete.id = event.currentTarget.dataset.id;\n            this.findingAidToDelete.repositoryCode = event.currentTarget.dataset.repositoryCode;\n\n            this.$bvModal.show( 'confirm-delete-modal' );\n        },\n        customFilter( row, filterProp ) {\n            for ( const filter in filterProp ) {\n                const filterValue = filterProp[ filter ];\n\n                if ( filterValue && ! row[ filter ].toLowerCase().includes( filterValue.toLowerCase() ) ) {\n                    return false;\n                }\n            }\n\n            return true;\n        },\n        getItems() {\n            const items = [];\n\n            Object.keys( this.publishedFindingAids ).forEach( repositoryCode => {\n                if ( this.currentRepositoryCodes.includes( repositoryCode ) ) {\n                    const findingAids = this.publishedFindingAids[ repositoryCode ];\n\n                    Object.keys( findingAids ).forEach( id => {\n                        const findingAid = findingAids[ id ];\n\n                        items.push(\n                            {\n                                repository     : `${ this.repositories[ repositoryCode ].name } (${ repositoryCode })`,\n                                repositoryCode : repositoryCode,\n                                id             : id,\n                                title          : findingAid.title,\n                                timestamp       : findingAid.timestamp,\n                            },\n                        );\n                    } );\n                }\n            } );\n\n            return items;\n        },\n        getNumFindingAidsForRepositoryCode( repositoryCode ) {\n            if ( this.publishedFindingAids[ repositoryCode ] ) {\n                return Object.keys( this.publishedFindingAids[ repositoryCode ] )\n                    .length.toLocaleString();\n            } else {\n                return 0;\n            }\n        },\n        onFiltered( filteredItems ) {\n            // Trigger pagination to update the number of buttons/pages due to filtering\n            this.totalRows = filteredItems.length;\n            this.currentPage = 1;\n        },\n        async queueDeleteFindingAid() {\n            this.$bvModal.show( 'queuing-delete-modal' );\n\n            await this.$sleep( 1000 );\n\n            this.$bvModal.hide( 'queuing-delete-modal' );\n\n            let message, title;\n            if ( this.findingAidToDelete.id === FADESIGN_118_CHANGING_FINDING_AID_ID &&\n                 this.blockDeletionOfFadesign118Changed ) {\n                // Don't delete the trick finding aid.\n            } else {\n                this.deleteFindingAid(\n                    {\n                        id         : this.findingAidToDelete.id,\n                        repository : this.findingAidToDelete.repositoryCode,\n                    },\n                );\n\n                message =\n                    'The Github EAD file has been queued for deletion.' +\n                    ' The finding aid, public EAD file, and search data will' +\n                    ' be deleted after the Github change has been made.' +\n                    ' The full delete process should be completed in [X time].';\n                title = 'Deletion has been queued';\n            }\n\n            if (\n                this.findingAidToDelete.id === FADESIGN_118_CHANGING_FINDING_AID_ID &&\n                this.blockDeletionOfFadesign118Changed\n            ) {\n                this.publishedFindingAids.archives[ FADESIGN_118_CHANGING_FINDING_AID_ID ].timestamp =\n                    moment().subtract( 1, 'minutes' ).unix();\n                message =\n                    'The deletion of the finding aid has been cancelled because the EAD file ' +\n                    'in the Github repo has been updated and has a new timestamp of ' +\n                    this.$getFormattedTimestamp(\n                        this.publishedFindingAids.archives[ FADESIGN_118_CHANGING_FINDING_AID_ID ].timestamp,\n                    ) + '.  ' +\n                    'It is recommended that you preview this updated EAD file ' +\n                    'before attempting to delete this finding aid.';\n                title = 'Finding aid deletion cancelled';\n\n                // Allow the user to delete the finding aid after this initial attempt.\n                this.blockDeletionOfFadesign118Changed = false;\n            } else if ( this.findingAidToDelete.id === FADESIGN_118_DISAPPEARING_FINDING_AID_ID ) {\n                message =\n                    'The finding aid may have already been deleted by another ' +\n                    'user.';\n                title = 'Finding aid not found';\n            }\n\n            this.clearDelete();\n\n            const that = this;\n            this.$bvModal.msgBoxOk( message, {\n                centered : true,\n                title    : title,\n            } ).then(\n                function () {\n                    that.refreshTableItemsFromStore();\n\n                    that.$refs.table.refresh();\n                },\n            );\n        },\n        async refreshTableItemsFromServer() {\n            // Using for-loop instead of for-each to make it simpler for.$sleep\n            // to work with the async/await.\n            const numCurrentRepositoryCodes = this.currentRepositoryCodes.length;\n            for ( let i = 0; i < numCurrentRepositoryCodes; i++ ) {\n                const repositoryCode = this.currentRepositoryCodes[ i ];\n\n                await this.$sleep( this.repositories[ repositoryCode ].loadTime );\n            }\n\n            this.items = this.getItems();\n        },\n        refreshTableItemsFromStore() {\n            this.items = this.getItems();\n        },\n        ...mapActions(\n            [\n                'setHelpModal',\n                'setFetchInitialPublishedFindingAidsMetadata',\n                'deleteFindingAid',\n            ],\n        ),\n    },\n};\n</script>\n\n<!-- Add \"scoped\" attribute to limit CSS to this component only -->\n<style scoped>\n    .action-button {\n        margin-bottom : 2%;\n        margin-left   : 2%;\n        margin-right  : 2%;\n        margin-top    : 2%;\n    }\n\n    #controls-row {\n        margin-bottom : 1%;\n    }\n\n    #header {\n        margin-bottom : 3%;\n        margin-top : 3%;\n    }\n</style>\n"]}